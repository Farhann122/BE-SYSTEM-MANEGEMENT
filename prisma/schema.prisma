// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model admin {
  id                Int           @id @default(autoincrement())
  username          String        @unique
  email             String        @unique
  password          String
  address           String
  phoneNumber       String
  role              userRole
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
}

model users {
  id                Int           @id @default(autoincrement())
  fullname          String        @unique
  address           String
  phoneNumber       String
  role              userRole
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  order             orders[]
}

model categories {
  id                Int           @id @default(autoincrement())
  name              String        @unique
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  product           products[]
}

model products {
  id                Int           @id @default(autoincrement())
  name              String
  description       String?
  categoryId        Int
  stock             Int           @default(0)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  category          categories?   @relation(fields: [categoryId],references: [id])

  userPrice         userPrice[]
  stockHistories    stockHistory[]
  orderItems        orderItems[]
}

model userPrice {
  id                Int           @id @default(autoincrement())
  productId         Int
  role              userRole
  price             Int
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  
  product           products      @relation(fields: [productId],references: [id])

  @@unique([productId,role])
}

model stockHistory {
  id                Int           @id @default(autoincrement())
  productId         Int
  oldStock          Int
  newStock          Int
  changeAt          DateTime      @default(now())

  product           products      @relation(fields: [productId],references: [id])
}

model orderItems {
  id                Int           @id @default(autoincrement())
  orderId           Int
  productId         Int
  quantity          Int           @default(1)
  subTotal          Int           @default(0)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  order             orders        @relation(fields: [orderId],references: [id])
  product           products      @relation(fields: [productId],references: [id])
}

model orders {
  id                Int           @id @default(autoincrement())
  userId            Int
  totalPrice        Int
  createdAt         DateTime      @default(now())

  user              users         @relation(fields: [userId],references: [id])
  orderItems        orderItems[]
}

enum userRole {
  ADMIN
  DISTRIBUTOR
  RESELLER
  MEMBER
}